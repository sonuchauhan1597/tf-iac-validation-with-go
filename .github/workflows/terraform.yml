name: "Terraform AWS CI/CD Pipeline"

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3,iam,sts,dynamodb
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      # Step: Configure AWS credentials for LocalStack
      - name: Configure AWS credentials for LocalStack
        run: |
          echo "Using LocalStack credentials"
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.LOCALSTACK_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.LOCALSTACK_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.LOCALSTACK_AWS_REGION }}
          AWS_ENDPOINT_URL:      "http://localhost:4566"

      # Step: Terraform lint (TFLint)
      - name: Terraform Lint (TFLint)
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0
      - run: tflint -f compact

      # Step: Terraform format check
      - name: Terraform Format Check
        run: terraform fmt -check

      # Step: Terraform init
      - name: Terraform init
        run: terraform -chdir=terraform init -input=false

      # Step: Terraform plan
      - name: Terraform plan
        id: plan
        run: terraform -chdir=terraform plan -no-color -input=false -out=plan.out

      # Step: Terraform apply
      - name: Terraform apply
        run: |
              export TF_LOG=DEBUG
              terraform -chdir=terraform apply -auto-approve plan.out

      # Step: Run Terratest integration tests
      - name: Run integration tests
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('test/integration/go.sum') }}
      - name: Download Go modules
        working-directory: ./test/integration
        run: go mod download
      - name: Run Terratest
        working-directory: ./test/integration
        run: go test -v -timeout 30m
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.LOCALSTACK_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.LOCALSTACK_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.LOCALSTACK_AWS_REGION }}
          AWS_ENDPOINT_URL:      "http://localhost:4566"
